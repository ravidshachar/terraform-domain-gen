# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

parameters:
- name: 'storageAccountName'
  type: string
  default: iacsa
- name: 'resourceGroupName'
  type: string
  default: IAC-RG
- name: 'containerName'
  type: string
  default: dscscripts


trigger:
  branches:
    include:
    - master
    - dsc
  paths:
    include:
    - dsc/*


pool:
  vmImage: windows-latest

steps:
- task: AzurePowerShell@5
  inputs:
    azureSubscription: 'Green-Peas-ms440-DE-001(9135e0b2-cfff-4136-bbbf-9c7428c2ba41)'
    ScriptType: 'InlineScript'
    Inline: |
      $storageAccountName = '${{ parameters.storageAccountName }}'
      $resourceGroupName = '${{ parameters.resourceGroupName }}'
      $StorageAccount = Get-AzStorageAccount -Name $storageAccountName -ResourceGroupName $resourceGroupName
      $Container = $StorageAccount | Get-AzStorageContainer -name '${{ parameters.containerName }}'
      
      Install-Module xActiveDirectory -Confirm:$false -Force
      Install-Module xPendingReboot -Confirm:$false -Force
      Install-Module xNetworking -Confirm:$false -Force
      Install-Module xComputerManagement -Confirm:$false -Force
      Install-Module ActiveDirectoryDsc -Confirm:$false -Force
      Install-Module xExchange -Confirm:$false -Force
      Install-Module cChoco -Confirm:$false -Force
      Install-Module AdfsDsc -Confirm:$false -Force
      
      foreach ($file in $(((Get-ChildItem dsc).Name) | Where {$_ -like "*.ps1"} | foreach-object {$_.Split(".")[0]})) {
        Write-Host $file
        
        # Creating the ZIP file for the DSC Configuration
        Publish-AzVMDscConfiguration "dsc/$file.ps1" -OutputArchivePath  "dsc/$file.zip" -force
        $dscZipFilePath = "dsc/$file.zip"
      
        # Upload single file
        $Container | Set-AzStorageBlobContent -File $dscZipFilePath -Force
      }
    azurePowerShellVersion: 'LatestVersion'