---
# tasks file for setup_exchange
- name: install .NET 4.8 and Visual C++ 2013 redistributable
  win_chocolatey:
    name:
      - netfx-4.8
      - vcredist2013
    state: present
  register: ex_choco_install

- name: Install UCMA
  win_package:
    path: https://download.microsoft.com/download/2/C/4/2C47A5C1-A1F3-4843-B9FE-84C0032C61EC/UcmaRuntimeSetup.exe
    arguments: /q /norestart
  register: ex_ucma_install

- name: Install mandatory windows features
  win_feature:
    name: "{{ features }}"
  register: ex_feature_install

- name: Restart if necassary
  win_reboot:
  when: ex_ucma_install.reboot_required or ex_feature_install.reboot_required

- name: Check if exchange.iso exists
  win_stat: 
    path: C:\exchange.iso  
  register: stat_file

- name: Download Exchange iso
  win_get_url:
    url: https://download.microsoft.com/download/f/0/e/f0e65686-3761-4c9d-b8b2-9fb71a207b8d/ExchangeServer2016-x64-CU22.ISO
    dest: C:\exchange.iso
  #when: not stat_file.stat.exists

- name: mount iso
  win_disk_image:
    image_path: C:\exchange.iso
    state: present
  register: disk_image_out

- name: set ansible become pass
  set_fact:
    ansible_become_password: "{{ admin_password }}"

- name: Prepare and install Exchange
  block:
    - name: Prepare AD
      win_package:
        path: '{{ disk_image_out.mount_paths[0] }}Setup.exe'
        arguments:
          - /IAcceptExchangeServerLicenseTerms_DiagnosticDataOFF
          - /PrepareAD
          - "/OrganizationName {{ domain_name.split(\".\")[0] | capitalize }} Org"

    - name: Prepare Schema
      win_package:
        path: '{{ disk_image_out.mount_paths[0] }}Setup.exe'
        arguments:
          - /IAcceptExchangeServerLicenseTerms_DiagnosticDataOFF
          - /PrepareSchema

    - name: Install exchange server
      win_package:
        path: '{{ disk_image_out.mount_paths[0] }}Setup.exe'
        arguments:
          - /IAcceptExchangeServerLicenseTerms_DiagnosticDataOFF
          - /Mode:Install
          - /Roles:MB
  become: yes
  become_user: "{{ domain_name.split(\".\")[0] | upper }}\\{{ admin_username }}"
  become_method: runas


- name: Finally reboot
  win_reboot:
