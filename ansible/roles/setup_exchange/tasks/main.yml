---
- name: debug org name
  debug:
    msg: "/OrganizationName \"{{ domain_name.split(\".\")[0] | capitalize }} Org\""

# tasks file for setup_exchange
- name: install .NET 4.8, UCMA4 and Visual C++ 2013 redistributable
  win_chocolatey:
    name:
      - netfx-4.8
      - vcredist2013
      - ucma4
    state: present
  register: ex_choco_install

#- name: Install UCMA
#  win_package:
#    path: https://download.microsoft.com/download/2/C/4/2C47A5C1-A1F3-4843-B9FE-84C0032C61EC/UcmaRuntimeSetup.exe
#    arguments:
#      - /q
#      - /norestart
#  register: ex_ucma_install

- name: Install mandatory windows features
  win_feature:
    name: "{{ features }}"
  register: ex_feature_install

- name: Restart just to be sure
  win_reboot:

- name: Check if exchange.iso exists
  win_stat: 
    path: C:\exchange.iso
    checksum_algorithm: sha256
  register: stat_file

- name: Download Exchange iso
  win_get_url:
    url: https://download.microsoft.com/download/7/d/5/7d5c319b-510b-4a2c-a77a-099c6f30ab54/ExchangeServer2016-x64-CU21.ISO
    dest: C:\exchange.iso
  when: not stat_file.stat.exists or stat_file.stat.checksum != iso_checksum 

- name: mount iso
  win_disk_image:
    image_path: C:\exchange.iso
    state: present
  register: disk_image_out

- name: Prepare and install Exchange
  block:
    - name: Prepare AD
      win_package:
        path: '{{ disk_image_out.mount_paths[0] }}Setup.exe'
        arguments:
          - /IAcceptExchangeServerLicenseTerms
          - /PrepareAD
          - "/OrganizationName \"{{ domain_name.split(\".\")[0] | capitalize }} Org\""

    - name: Prepare Schema
      win_package:
        path: '{{ disk_image_out.mount_paths[0] }}Setup.exe'
        arguments:
          - /IAcceptExchangeServerLicenseTerms
          - /PrepareSchema

    - name: Install exchange server
      win_scheduled_task:
        name: Install_Exchange
        actions:
        - path: '{{ disk_image_out.mount_paths[0] }}Setup.exe'
          arguments: /IAcceptExchangeServerLicenseTerms /Mode:Install /Roles:MB
       # Remove this action if the task shouldn't be deleted on completion
        #- path: cmd.exe
        #  arguments: /c schtasks.exe /Delete /TN "Install_Exchange" /F
        - path: cmd.exe
          arguments: /c shutdown /r
        triggers:
        - type: registration
  become: yes
  become_user: "{{ domain_name.split(\".\")[0] | upper }}\\{{ admin_username }}"
  become_method: runas
  vars:
    ansible_become_password: "{{ admin_password }}"

- name: Wait for scheduled task to be done
  block:
    - name: Wait for the scheduled task to complete
      win_scheduled_task_stat:
        name: Install_Exchange
      register: task_stat
      until: (task_stat.state is defined and task_stat.state.status != "TASK_STATE_RUNNING") or (task_stat.task_exists == False)
      retries: 60
      delay: 60
  rescue:
    - name: Wait for connection if winrm is restarting
      wait_for_connection:

- name: Wait for the scheduled task to complete
  win_scheduled_task_stat:
    name: Install_Exchange
  register: task_stat
  until: (task_stat.state is defined and task_stat.state.status != "TASK_STATE_RUNNING") or (task_stat.task_exists == False)
  retries: 60
  delay: 60

#- name: Finally reboot
#  win_reboot:
